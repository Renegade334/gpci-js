import { createHash } from 'node:crypto';

const GPCI_SBOX = Uint8Array.of(
	0,   4,   8,   12,  4,   5,   9,   13,  8,   9,   10,  14,  12,  13,  14,  15,
	64,  68,  72,  76,  68,  69,  73,  77,  72,  73,  74,  78,  76,  77,  78,  79,
	128, 132, 136, 140, 132, 133, 137, 141, 136, 137, 138, 142, 140, 141, 142, 143,
	192, 196, 200, 204, 196, 197, 201, 205, 200, 201, 202, 206, 204, 205, 206, 207,
	64,  68,  72,  76,  68,  69,  73,  77,  72,  73,  74,  78,  76,  77,  78,  79,
	80,  84,  88,  92,  84,  85,  89,  93,  88,  89,  90,  94,  92,  93,  94,  95,
	144, 148, 152, 156, 148, 149, 153, 157, 152, 153, 154, 158, 156, 157, 158, 159,
	208, 212, 216, 220, 212, 213, 217, 221, 216, 217, 218, 222, 220, 221, 222, 223,
	128, 132, 136, 140, 132, 133, 137, 141, 136, 137, 138, 142, 140, 141, 142, 143,
	144, 148, 152, 156, 148, 149, 153, 157, 152, 153, 154, 158, 156, 157, 158, 159,
	160, 164, 168, 172, 164, 165, 169, 173, 168, 169, 170, 174, 172, 173, 174, 175,
	224, 228, 232, 236, 228, 229, 233, 237, 232, 233, 234, 238, 236, 237, 238, 239,
	192, 196, 200, 204, 196, 197, 201, 205, 200, 201, 202, 206, 204, 205, 206, 207,
	208, 212, 216, 220, 212, 213, 217, 221, 216, 217, 218, 222, 220, 221, 222, 223,
	224, 228, 232, 236, 228, 229, 233, 237, 232, 233, 234, 238, 236, 237, 238, 239,
	240, 244, 248, 252, 244, 245, 249, 253, 248, 249, 250, 254, 252, 253, 254, 255
);

/**
 * Calculates the GPCI hash of the given input.
 *
 * Note that in SA:MP, the string provided as input to this hash function is equivalent to:
 *
 * ```js
 * GTASanAndreasUserFilesPath.substring(4)
 * // eg. "sers\\Administrator\\Documents\\GTA San Andreas User Files"
 * ```
 */
function GPCI(d: string): string {
	const byteArray = createHash('sha1').update(d).digest().swap32().map(b => GPCI_SBOX[b]);
	return Buffer.from(byteArray).toString('hex').toUpperCase().replace(/^0+/, '');
}

export = GPCI;
