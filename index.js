const { createHash } = require('node:crypto');

const GPCI_SBOX = Uint8Array.of(
	0x00, 0x04, 0x08, 0x0c, 0x04, 0x05, 0x09, 0x0d, 0x08, 0x09, 0x0a, 0x0e, 0x0c, 0x0d, 0x0e, 0x0f,
	0x40, 0x44, 0x48, 0x4c, 0x44, 0x45, 0x49, 0x4d, 0x48, 0x49, 0x4a, 0x4e, 0x4c, 0x4d, 0x4e, 0x4f,
	0x80, 0x84, 0x88, 0x8c, 0x84, 0x85, 0x89, 0x8d, 0x88, 0x89, 0x8a, 0x8e, 0x8c, 0x8d, 0x8e, 0x8f,
	0xc0, 0xc4, 0xc8, 0xcc, 0xc4, 0xc5, 0xc9, 0xcd, 0xc8, 0xc9, 0xca, 0xce, 0xcc, 0xcd, 0xce, 0xcf,
	0x40, 0x44, 0x48, 0x4c, 0x44, 0x45, 0x49, 0x4d, 0x48, 0x49, 0x4a, 0x4e, 0x4c, 0x4d, 0x4e, 0x4f,
	0x50, 0x54, 0x58, 0x5c, 0x54, 0x55, 0x59, 0x5d, 0x58, 0x59, 0x5a, 0x5e, 0x5c, 0x5d, 0x5e, 0x5f,
	0x90, 0x94, 0x98, 0x9c, 0x94, 0x95, 0x99, 0x9d, 0x98, 0x99, 0x9a, 0x9e, 0x9c, 0x9d, 0x9e, 0x9f,
	0xd0, 0xd4, 0xd8, 0xdc, 0xd4, 0xd5, 0xd9, 0xdd, 0xd8, 0xd9, 0xda, 0xde, 0xdc, 0xdd, 0xde, 0xdf,
	0x80, 0x84, 0x88, 0x8c, 0x84, 0x85, 0x89, 0x8d, 0x88, 0x89, 0x8a, 0x8e, 0x8c, 0x8d, 0x8e, 0x8f,
	0x90, 0x94, 0x98, 0x9c, 0x94, 0x95, 0x99, 0x9d, 0x98, 0x99, 0x9a, 0x9e, 0x9c, 0x9d, 0x9e, 0x9f,
	0xa0, 0xa4, 0xa8, 0xac, 0xa4, 0xa5, 0xa9, 0xad, 0xa8, 0xa9, 0xaa, 0xae, 0xac, 0xad, 0xae, 0xaf,
	0xe0, 0xe4, 0xe8, 0xec, 0xe4, 0xe5, 0xe9, 0xed, 0xe8, 0xe9, 0xea, 0xee, 0xec, 0xed, 0xee, 0xef,
	0xc0, 0xc4, 0xc8, 0xcc, 0xc4, 0xc5, 0xc9, 0xcd, 0xc8, 0xc9, 0xca, 0xce, 0xcc, 0xcd, 0xce, 0xcf,
	0xd0, 0xd4, 0xd8, 0xdc, 0xd4, 0xd5, 0xd9, 0xdd, 0xd8, 0xd9, 0xda, 0xde, 0xdc, 0xdd, 0xde, 0xdf,
	0xe0, 0xe4, 0xe8, 0xec, 0xe4, 0xe5, 0xe9, 0xed, 0xe8, 0xe9, 0xea, 0xee, 0xec, 0xed, 0xee, 0xef,
	0xf0, 0xf4, 0xf8, 0xfc, 0xf4, 0xf5, 0xf9, 0xfd, 0xf8, 0xf9, 0xfa, 0xfe, 0xfc, 0xfd, 0xfe, 0xff,
);

/**
 * Calculates the GPCI hash of the given input.
 *
 * Note that in SA:MP, the string provided as input to this hash function is equivalent to:
 *
 * ```js
 * GTASanAndreasUserFilesPath.substring(4)
 * // eg. "sers\\Administrator\\Documents\\GTA San Andreas User Files"
 * ```
 */
function GPCI(d) {
	const buffer = createHash('sha1').update(d).digest().swap32().map(b => GPCI_SBOX[b]);
	return buffer.toString('hex').toUpperCase().replace(/^0+/, '');
}

module.exports = GPCI;
